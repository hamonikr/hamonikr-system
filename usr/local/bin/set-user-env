#!/bin/bash
#
# Setting default user desktop environment for HamoniKR OS
# 
# 이 프로그램은 하모니카OS 사용자의 기본 환경을 설정하는 프로그램 이기 때문에,
# root 권한이 아니라 사용자 권한으로 실행되어야 합니다.
#
# Usage : set-user-env apply | restore
# 
# Copyright 2022 HamoniKR Team. All rights reserved. See LICENSE.md in the
# project root for license information.

[ "$EUID" = 0 ] && echo "Run with user authority. (EUID : $EUID)" && exit

log() {
    echo "$@"
    mkdir -p $HOME/.hamonikr/log
    exec 3>&1 1>>$HOME/.hamonikr/log/${0##*/}.log 2>&1
    echo "$(date +%Y-%m-%d_%H:%M_%S) ${0##*/} : $@"
    exec 1>&3 3>&-
}

setup_qt_scale() {
    local desktop
    desktop=${XDG_CURRENT_DESKTOP,,}
    [ -z "$desktop" ] && desktop=$(echo "$XDG_DATA_DIRS" | sed 's/.*\(xfce\|kde\|gnome\).*/\1/')
    desktop=${desktop,,}  # convert to lower case

    local scale
    if [[ $desktop == *"cinnamon"* ]]; then
        echo "Cinnamon : $desktop"
        scale=$(gsettings list-recursively | grep active-display-scale | cut -d" " -f3) 
    elif [[ $desktop == *"gnome"* ]]; then
        echo "GNOME : $desktop"
        scale=$(gsettings list-recursively | grep "org.gnome.desktop.interface text-scaling-factor" | cut -d" " -f3)
    fi

    if [ ! -z "$scale" ]; then
        echo "export QT_AUTO_SCREEN_SET_FACTOR=0" >> ~/.xprofile
        echo "export QT_AUTO_SCREEN_SCALE_FACTORS=$scale" >> ~/.xprofile
        echo "export QT_SCALE_FACTOR=$scale" >> ~/.xprofile
        echo "export QT_FONT_DPI=96" >> ~/.xprofile
        log "Update $desktop QT scale variable in ~/.xprofile" 
    fi
}

set_keyboard_shortcuts() {
    # 단축키
    if command -v shutter &> /dev/null ; then
        if ! command -v hamonikr-chatbot &> /dev/null ; then
            log "update default keyboard shortcut settings for shutter"
            gsettings set org.cinnamon.desktop.keybindings.media-keys www "['<Super>w']"
            gsettings set org.cinnamon.desktop.keybindings.media-keys help "['F1']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ binding "['<Shift><Primary><Alt>p']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ command 'shutter -s'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ name '특정영역 화면캡처'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ binding "['<Primary><Alt>p']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ command 'shutter -w'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ name '선택한 윈도우 화면캡처'
            gsettings set org.cinnamon.desktop.keybindings custom-list "['custom0','custom1']"
        else
            log "update default keyboard shortcut settings for shutter and hamonikr-chatbot"
            gsettings set org.cinnamon.desktop.keybindings.media-keys www "['<Super>w']"
            gsettings set org.cinnamon.desktop.keybindings.media-keys help "['F1']"                      
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ binding "['<Shift><Primary><Alt>p']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ command 'shutter -s'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ name '특정영역 화면캡처'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ binding "['<Primary><Alt>p']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ command 'shutter -w'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom1/ name '선택한 윈도우 화면캡처'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ binding "['<Primary><Alt>a']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ command 'hamonikr-chatbot -c'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ name 'AI 질의'
            gsettings set org.cinnamon.desktop.keybindings custom-list "['custom0','custom1','custom2']"
        fi
    else
        if command -v hamonikr-chatbot &> /dev/null ; then    
            log "update default keyboard shortcut settings for hamonikr-chatbot"
            gsettings set org.cinnamon.desktop.keybindings.media-keys www "['<Super>w']"
            gsettings set org.cinnamon.desktop.keybindings.media-keys help "['F1']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ binding "['<Primary><Alt>a']"
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ command 'hamonikr-chatbot -c'
            gsettings set org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom0/ name 'AI 질의'
            gsettings set org.cinnamon.desktop.keybindings custom-list "['custom0']"
        fi
    fi
    log "Updated keyboard shortcut settings"
}

# Ensure hamonikr-chatbot shortcut
existing_command=$(gsettings get org.cinnamon.desktop.keybindings.custom-keybinding:/org/cinnamon/desktop/keybindings/custom-keybindings/custom2/ command 2>/dev/null)
if [ "$existing_command" == "'hamonikr-chatbot -c'" ]; then
    log "hamonikr-chatbot shortcut already set. No changes made."
else
    log "Setting keyboard shortcut for hamonikr-chatbot"
    set_keyboard_shortcuts
fi

handle_upgrade_from_hanla_to_taebaek() {
    if [ -f /var/log/taebaekupdate.dummy ]; then
        log "Upgrade from hanla to taebaek troubleshooting"
        
        local files_to_delete=(
            "$HOME/.hamonikr/themes"
            "$HOME/.hamonikr/backup_dconf"
            "$HOME/.hamonikr/default_dconf"
            "$HOME/.hamonikr/default_dconf.done"
            "$HOME/.hamonikr/default_dconf.log"
            "$HOME/.hamonikr/hamonikr-terminal.dconf"
            "$HOME/.hamonikr/update-dconf-setting.log"
            "$HOME/.config/plank/dock1/launchers/desktop.dockitem"
            "$HOME/.config/plank/dock1/launchers/io.github.celluloid_player.Celluloid.dockitem"
            "$HOME/.config/plank/dock1/launchers/mintinstall.dockitem"
            "$HOME/.config/plank/dock1/launchers/naver-whale.dockitem"
            "$HOME/.config/plank/dock1/launchers/nemo.dockitem"
            "$HOME/.config/plank/dock1/launchers/org.gnome.Termianl.dockitem"
            "$HOME/.config/plank/dock1/launchers/plank-dconf"
            "$HOME/.config/plank/dock1/launchers/stacer.dockitem"
            "$HOME/.config/plank/dock1/launchers/system-shutdown.dockitem"
            "$HOME/.config/plank/dock1/launchers/trash.dockitem"
            "$HOME/.config/plank/dock1/launchers/xed.dockitem"
            "$HOME/.cinnamon/configs/*"
            "$HOME/.cinnamon/spices.cache"
        )
        
        for file in "${files_to_delete[@]}"; do
            rm -rf $file
        done
        
        cp -af /etc/skel/.config/autostart/hamonikr-theme.desktop $HOME/.config/autostart/hamonikr-theme.desktop
        cp -af /etc/skel/.config/autostart/plank.desktop $HOME/.config/autostart/plank.desktop
        
        [ -f ~/.config/user-dirs.dirs ] && source ~/.config/user-dirs.dirs
        [ -z $XDG_DESKTOP_DIR ] && XDG_DESKTOP_DIR="$HOME/Desktop"
        if [ -f $XDG_DESKTOP_DIR/hamonikrorg.desktop ]; then
            rm $XDG_DESKTOP_DIR/hamonikrorg.desktop
            cp -af /usr/share/applications/hamonikr-community.desktop $XDG_DESKTOP_DIR/hamonikr-community.desktop
            chmod 755 $XDG_DESKTOP_DIR/hamonikr-community.desktop
        fi
        
        [ -f $HOME/.hamonikr/theme/hamonikr-theme-setting.done ] && rm $HOME/.hamonikr/theme/hamonikr-theme-setting.done
        hamonikr-theme-setting macstyle
        
        [ ! -z $(pidof plank | grep '[0-9]') ] && killall plank &>/dev/null
        
        sleep 1
        touch $HOME/.hamonikr/taebaekupdate.done
    fi
}

case "$1" in
    apply|default)
        if [ ! -f "$HOME/.hamonikr/taebaekupdate.done" ]; then
            handle_upgrade_from_hanla_to_taebaek
        fi

        [ -f "$HOME/.hamonikr/set-user-env.done" ] && isrun="run"

        if [ x$isrun != "xrun" ] ; then
            if [ ! -f $HOME/.hamonikr/backup_user_env.dconf ] ; then
                dconf dump / > $HOME/.hamonikr/backup_user_env.dconf
                [ $? -eq 0 ] && log "Succeed backup from previous settings." || log "Failed: Backup from previous settings."
            fi

            if [ -f "$HOME/.cinnamon/configs/menu@cinnamon.org/0.json" ]; then 
                sed -i 's/"value": "linuxmint-logo-ring-symbolic"/"value": "hamonikr"/g' $HOME/.cinnamon/configs/menu@cinnamon.org/0.json
                log "Update hamonikr default logo setting"
            fi
            if [ -f "$HOME/.config/cinnamon/spices/menu@cinnamon.org/0.json" ]; then 
                sed -i.bak 's/"value": "hamonikr-menu"/"value": "hamonikr"/g' $HOME/.config/cinnamon/spices/menu@cinnamon.org/0.json
                sed -i.bak 's/"value": "linuxmint-logo-ring-symbolic"/"value": "hamonikr"/g' $HOME/.config/cinnamon/spices/menu@cinnamon.org/0.json
                log "Update hamonikr default logo setting"            
            fi            

            [ -d "$HOME/.cache" ] && rm -rf $HOME/.cache/* && log "Deleted cache"

            if [ -d "/etc/skel/.config/albert" ]; then
                cp -af /etc/skel/.config/albert $HOME/.config/
                [ $? -eq 0 ] && log "Copy albert launcher settings"
            fi
            
            source /etc/os-release

            if [ "X$ID_LIKE" = "Xubuntu" ]; then
                if [ "$(dpkg-query -W --showformat='${db:Status-Status}' hamonikr-themes 2>&1)" = "installed" ] && [ -d "/etc/skel/.config/plank" ]; then
                    [ ! -z $(pidof plank | grep '[0-9]') ] && killall plank &>/dev/null
                    rm -rf $HOME/.config/plank
                    cp -af /etc/skel/.config/plank $HOME/.config/
                    cp -af /etc/skel/.config/autostart/plank.desktop $HOME/.config/autostart/plank.desktop
                    dconf load /net/launchpad/plank/docks/ < /etc/skel/.config/plank/dock1/launchers/plank-dconf
                    [ -z $(pidof plank | grep '[0-9]') ] && plank & &>/dev/null
                    [ $? -eq 0 ] && log "Update HamoniKR OS plank Dock Settings."
                fi
            fi
   
            if [ -f /etc/hamonikr/templates/hamonikr-terminal.dconf ]; then
                dconf load /org/gnome/terminal/legacy/profiles:/:`gsettings list-recursively org.gnome.Terminal.ProfilesList | grep default | cut -d' ' -f3 | tr -d "'"`/ < /etc/hamonikr/templates/hamonikr-terminal.dconf
                [ $? -eq 0 ] && log "Update default terminal settings"
            fi

            if command -v nimf &> /dev/null ; then
                im-config -n nimf
                log "Update default nimf settings"
            fi

            set_keyboard_shortcuts

            if [ ! -d $HOME/.local/share/cinnamon/search_providers/google@hamonikr.org ]; then
                mkdir -p $HOME/.local/share/cinnamon/search_providers/
                cp -a /usr/share/cinnamon/search_providers/google@hamonikr.org $HOME/.local/share/cinnamon/search_providers/google@hamonikr.org
            fi
            gsettings set org.cinnamon enabled-search-providers "[\"google@hamonikr.org\"]"
            log "update search provider settings"

            # if [ -f "$HOME/.config/asbru/asbru.yml" ]; then
            #     sed -i 's/terminal font:.*/terminal font: MesloLGS NF 9/g' $HOME/.config/asbru/asbru.yml
            #     sed -i 's/info font:.*/info font: MesloLGS NF 9/g' $HOME/.config/asbru/asbru.yml
            #     # sed -i "s/unprotected color:.*/unprotected color: '#8f8ff0f0a4a4'/g" $HOME/.config/asbru/asbru.yml
            #     [ $? -eq 0 ] && log "Update asbru font setting"
            # fi

            [ -f ~/.config/user-dirs.dirs ] && source ~/.config/user-dirs.dirs
            [ -z $XDG_DESKTOP_DIR ] && XDG_DESKTOP_DIR="$HOME/Desktop"
            
            if [ "$(dpkg-query -W --showformat='${db:Status-Status}' naver-whale-stable 2>&1)" = "installed" ]; then
                xdg-settings set default-web-browser naver-whale.desktop
                xdg-mime default naver-whale.desktop x-scheme-handler/https x-scheme-handler/http
            fi

            if [ "$(dpkg-query -W --showformat='${db:Status-Status}' lollypop 2>&1)" = "installed" ]; then
                xdg-mime default org.gnome.Lollypop.desktop application/ogg application/x-ogg application/x-ogm-audio audio/aac audio/mp4 audio/mpeg audio/mpegurl audio/ogg audio/vnd.rn-realaudio audio/vorbis audio/x-flac audio/x-mp3 audio/x-mpeg audio/x-mpegurl audio/x-ms-wma audio/x-musepack audio/x-oggflac audio/x-pn-realaudio audio/x-scpls audio/x-speex audio/x-vorbis audio/x-vorbis+ogg audio/x-wav x-content/audio-player audio/x-aac audio/m4a audio/x-m4a audio/mp3 audio/ac3 audio/flac application/xspf+xml audio/x-opus+ogg application/vnd.apple.mpegurl
            fi

            if [ "$(dpkg-query -W --showformat='${db:Status-Status}' pix 2>&1)" = "installed" ]; then
                xdg-mime default pix.desktop image/bmp image/jpeg image/gif image/png image/tiff image/x-bmp image/x-ico image/x-png image/x-pcx image/x-tga image/xpm image/svg+xml
            fi

            touch $HOME/.hamonikr/set-user-env.done
            log "Created set-user-env.done file"
        fi
      ;;
    restore|reset)
        if [ -f "$HOME/.hamonikr/backup_user_env.dconf" ]; then
            dconf load / < $HOME/.hamonikr/backup_user_env.dconf
            [ $? -eq 0 ] && log "Successful restored previous settings." || log "Failed: Restore previous settings."
        fi
      ;;
    updatenumlock)
        if [ -f "/etc/lightdm/slick-greeter.conf" ] && [ -f "/etc/lightdm/ukui-greeter.conf" ]; then
            numlock_value=$(grep 'activate-numlock=' /etc/lightdm/slick-greeter.conf | cut -d'=' -f2)
            if [ "$numlock_value" == "true" ]; then
                [ -f "/usr/bin/numlockx" ] && numlockx on && log "numlockx on"
            else
                [ -f "/usr/bin/numlockx" ] && numlockx off && log "numlockx off"
            fi
        fi
      ;;
    *)
        echo "This program required parameter."
        echo "Usage : set-user-env apply | restore"
      ;;
esac
